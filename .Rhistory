text = text)) +
geom_tile() +
scale_fill_gradient(low = "#6e99c4", high = "#132B43") +
scale_y_discrete() +
scale_x_discrete() +
xlab("Hour of the day") +
theme(panel.grid.major = element_blank(),
axis.ticks.x = element_blank(),
axis.ticks.y = element_blank(),
axis.text.x = element_text(size = 6),
axis.text.y = element_text(size = 6),
axis.title.y = element_blank())
ggplotly(hMap_hour_of_day, tooltip = "text")
View(credit_card)
cc_hour_of_day <- credit_card %>%
count(location, hour_of_day) %>%
mutate(location = as.factor(location),
hour_of_day = as.factor(hour_of_day),
text = paste0("Location: ", location, "\n",
"Hour of the day: ", hour_of_day, "\n",
"Count: ", n))
hMap_hour_of_day <- ggplot(cc_hour_of_day, aes(hour_of_day,
location,
fill = n,
text = text)) +
geom_tile() +
scale_fill_viridis(discrete = FALSE) +
scale_y_discrete() +
scale_x_discrete() +
xlab("Hour of the day") +
theme(panel.grid.major = element_blank(),
axis.ticks.x = element_blank(),
axis.ticks.y = element_blank(),
axis.text.x = element_text(size = 6),
axis.text.y = element_text(size = 6),
axis.title.y = element_blank())
ggplotly(hMap_hour_of_day, tooltip = "text")
cc_hour_of_day <- credit_card %>%
count(location, hour_of_day) %>%
mutate(location = as.factor(location),
hour_of_day = as.factor(hour_of_day),
text = paste0("Location: ", location, "\n",
"Hour of the day: ", hour_of_day, "\n",
"Count: ", n))
hMap_hour_of_day <- ggplot(cc_hour_of_day, aes(hour_of_day,
location,
fill = t,
text = text)) +
geom_tile() +
scale_fill_viridis(discrete = FALSE) +
scale_y_discrete() +
scale_x_discrete() +
xlab("Hour of the day") +
theme(panel.grid.major = element_blank(),
axis.ticks.x = element_blank(),
axis.ticks.y = element_blank(),
axis.text.x = element_text(size = 6),
axis.text.y = element_text(size = 6),
axis.title.y = element_blank())
ggplotly(hMap_hour_of_day, tooltip = "text")
View(cc_hour_of_day)
cc_hour_of_day <- credit_card %>%
count(location, hour_of_day) %>%
mutate(location = as.factor(location),
hour_of_day = as.factor(hour_of_day),
text = paste0("Location: ", location, "\n",
"Hour of the day: ", hour_of_day, "\n",
"Count: ", n))
hMap_hour_of_day <- ggplot(cc_hour_of_day, aes(hour_of_day,
location,
fill = n,
text = text)) +
geom_tile() +
scale_fill_viridis(discrete = FALSE) +
scale_y_discrete() +
scale_x_discrete() +
xlab("Hour of the day") +
theme(panel.grid.major = element_blank(),
axis.ticks.x = element_blank(),
axis.ticks.y = element_blank(),
axis.text.x = element_text(size = 6),
axis.text.y = element_text(size = 6),
axis.title.y = element_blank())
ggplotly(hMap_hour_of_day, tooltip = "text")
cc_day_of_week <- credit_card %>%
count(location, day_of_week) %>%
mutate(location = as.factor(location),
day_of_week = as.factor(day_of_week),
text = paste0("Location: ", location, "\n",
"Day: ", day_of_week, "\n",
"Count: ", n))
hMap_cc_day <- ggplot(cc_day_of_week, aes(day_of_week,
location,
fill = n,
text = text)) +
geom_tile() +
scale_fill_viridis(discrete = FALSE) +
scale_y_discrete() +
scale_x_discrete() +
xlab("Day of the week") +
theme(panel.grid.major = element_blank(),
axis.ticks.x = element_blank(),
axis.ticks.y = element_blank(),
axis.text.x = element_text(size = 6),
axis.text.y = element_text(size = 6),
axis.title.y = element_blank())
ggplotly(hMap_cc_day, tooltip = "text")
cc_hour_of_day <- credit_card %>%
count(location, hour_of_day) %>%
mutate(location = as.factor(location),
hour_of_day = as.factor(hour_of_day),
text = paste0("Location: ", location, "\n",
"Hour of the day: ", hour_of_day, "\n",
"Count: ", n))
hMap_hour_of_day <- ggplot(cc_hour_of_day, aes(hour_of_day,
location,
fill = n,
text = text)) +
geom_tile() +
scale_fill_viridis(discrete = FALSE) +
scale_y_discrete() +
scale_x_discrete() +
xlab("Hour of the day") +
theme(panel.grid.major = element_blank(),
axis.ticks.x = element_blank(),
axis.ticks.y = element_blank(),
axis.text.x = element_text(size = 5),
axis.text.y = element_text(size = 5),
axis.title.y = element_blank())
ggplotly(hMap_hour_of_day, tooltip = "text")
cc_hour_of_day <- credit_card %>%
count(location, hour_of_day) %>%
mutate(location = as.factor(location),
hour_of_day = as.factor(hour_of_day),
text = paste0("Location: ", location, "\n",
"Hour of the day: ", hour_of_day, "\n",
"Count: ", n))
hMap_hour_of_day <- ggplot(cc_hour_of_day, aes(hour_of_day,
location,
fill = n,
text = text)) +
geom_tile() +
scale_fill_viridis(discrete = FALSE) +
scale_y_discrete() +
scale_x_discrete() +
xlab("Hour of the day") +
theme(panel.grid.major = element_blank(),
axis.text.x = element_text(size = 5),
axis.text.y = element_text(size = 10))
ggplotly(hMap_hour_of_day, tooltip = "text")
cc_hour_of_day <- credit_card %>%
count(location, hour_of_day) %>%
mutate(location = as.factor(location),
hour_of_day = as.factor(hour_of_day),
text = paste0("Location: ", location, "\n",
"Hour of the day: ", hour_of_day, "\n",
"Count: ", n))
hMap_hour_of_day <- ggplot(cc_hour_of_day, aes(hour_of_day,
location,
fill = n,
text = text)) +
geom_tile() +
scale_fill_viridis(discrete = FALSE) +
scale_y_discrete() +
scale_x_discrete() +
xlab("Hour of the day") +
theme(panel.grid.major = element_blank(),
axis.text.x = element_text(size = 10),
axis.text.y = element_text(size = 5))
ggplotly(hMap_hour_of_day, tooltip = "text")
cc_hour_of_day <- credit_card %>%
count(location, hour_of_day) %>%
mutate(location = as.factor(location),
hour_of_day = as.factor(hour_of_day),
text = paste0("Location: ", location, "\n",
"Hour of the day: ", hour_of_day, "\n",
"Count: ", n))
hMap_hour_of_day <- ggplot(cc_hour_of_day, aes(hour_of_day,
location,
fill = n,
text = text)) +
geom_tile() +
scale_fill_viridis(discrete = FALSE) +
scale_y_discrete() +
scale_x_discrete() +
xlab("Hour of the day") +
theme(panel.grid.major = element_blank(),
axis.ticks.x = element_blank(),
axis.ticks.y = element_blank(),
axis.text.x = element_text(size = 10),
axis.text.y = element_text(size = 5),
axis.title.y = element_blank())
ggplotly(hMap_hour_of_day, tooltip = "text")
cc_hour_of_day <- credit_card %>%
count(location, hour_of_day) %>%
mutate(location = as.factor(location),
hour_of_day = as.factor(hour_of_day),
text = paste0("Location: ", location, "\n",
"Hour of the day: ", hour_of_day, "\n",
"Count: ", n))
hMap_hour_of_day <- ggplot(cc_hour_of_day, aes(hour_of_day,
location,
fill = n,
text = text)) +
geom_tile() +
scale_fill_viridis(discrete = FALSE) +
scale_y_discrete() +
scale_x_discrete() +
xlab("Hour of the day") +
theme(panel.grid.major = element_blank(),
axis.ticks.x = element_blank(),
axis.ticks.y = element_blank(),
axis.text.x = element_text(size = 6),
axis.text.y = element_text(size = 5),
axis.title.y = element_blank())
ggplotly(hMap_hour_of_day, tooltip = "text")
cc_day_of_week <- credit_card %>%
count(location, day_of_week) %>%
mutate(location = as.factor(location),
day_of_week = as.factor(day_of_week),
text = paste0("Location: ", location, "\n",
"Day: ", day_of_week, "\n",
"Count: ", n))
hMap_cc_day <- ggplot(cc_day_of_week, aes(day_of_week,
location,
fill = n,
text = text)) +
geom_tile() +
scale_fill_viridis(discrete = FALSE) +
scale_y_discrete() +
scale_x_discrete() +
xlab("Day of the week") +
theme(panel.grid.major = element_blank(),
axis.ticks.x = element_blank(),
axis.ticks.y = element_blank(),
axis.text.x = element_text(size = 5),
axis.text.y = element_text(size = 5),
axis.title.y = element_blank())
ggplotly(hMap_cc_day, tooltip = "text")
cc_day_of_week <- credit_card %>%
count(location, day_of_week) %>%
mutate(location = as.factor(location),
day_of_week = as.factor(day_of_week),
text = paste0("Location: ", location, "\n",
"Day: ", day_of_week, "\n",
"Count: ", n))
hMap_cc_day <- ggplot(cc_day_of_week, aes(day_of_week,
location,
fill = n,
text = text)) +
geom_tile() +
scale_fill_viridis(discrete = FALSE) +
scale_y_discrete() +
scale_x_discrete() +
xlab("Day of the week") +
theme(panel.grid.major = element_blank(),
axis.ticks.x = element_blank(),
axis.ticks.y = element_blank(),
axis.text.x = element_text(size = 5),
axis.text.y = element_text(size = 5),
axis.title.y = element_blank())
ggplotly(hMap_cc_day, tooltip = "text")
lc_day_of_week <- loyalty_card %>%
count(location, day_of_week) %>%
mutate(location = as.factor(location),
day_of_week = as.factor(day_of_week),
text = paste0("Location: ", location, "\n",
"Day: ", day_of_week, "\n",
"Count: ", n))
hMap_lc_day <- ggplot(cc_day_of_week, aes(day_of_week,
location,
fill = n,
text = text)) +
geom_tile() +
scale_fill_viridis(discrete = FALSE) +
scale_y_discrete() +
scale_x_discrete() +
xlab("Day of the week") +
theme(panel.grid.major = element_blank(),
axis.ticks.x = element_blank(),
axis.ticks.y = element_blank(),
axis.text.x = element_text(size = 5),
axis.text.y = element_text(size = 5),
axis.title.y = element_blank())
ggplotly(hMap_lc_day, tooltip = "text")
p = npts(gps, by_feature = TRUE)
bgmap <- raster("data/Geospatial/MC2-tourist.tif")
tm_shape(bgmap) +
tm_rgb(bgmap, r = 1, g = 2, b = 3,
alpha = NA,
saturation = 1,
interpolate = TRUE,
max.value = 255)
tmap_mode("plot")
tm_shape(bgmap) +
tm_rgb(bgmap, r = 1, g = 2, b = 3,
alpha = NA,
saturation = 1,
interpolate = TRUE,
max.value = 255)
Abila_st <- st_read(dsn = "data/Geospatial", layer = "Abila")
View(car_assign)
View(gps)
emp_gps <- gps %>%
left_join(car_assign, by = c("CarID" = "CarID"))
View(emp_gps)
glimpst(emp_gps)
glimpse(emp_gps)
emp_gps_sf <- st_as_sf(emp_gps,
coords = c("long", "lat"),
crs = 4326)
View(emp_gps_sf)
gps_path <- emp_gps_sf %>%
group_by(CarID) %>%
summarise(m = mean(Timestamp),
do_union = FALSE) %>%
st_cast("LINESTRING")
gps_path
View(gps_path)
glimpse(gps_path)
p = npts(gps_path, by_feature = TRUE)
gps_path2 <- cbind(gps_path, p)
View(gps_path2)
p = npts(gps_path, by_feature = TRUE)
gps_path2 <- cbind(gps_path, p)
gps_path2
View(gps_path2)
p = npts(gps_path, by_feature = TRUE)
gps_path2 <- cbind(gps_path, p)
gps_path_sort <- gps_path2 %>%
arrange(p)
gps_path_sort
View(car_assign)
gps_path_selected <- gps_path %>%
filter(id==1)
gps_path_selected <- gps_path %>%
filter(CarID==1)
tmap_mode("view")
tm_shape(bgmap) +
tm_rgb(bgmap, r = 1, g = 2, b = 3,
alpha = NA,
saturation = 1,
interpolate = TRUE,
max.value = 255) +
tm_shape(gps_path_selected) +
tm_lines()
gps_path_selected <- gps_path %>%
filter(CarID==1)
tmap_mode("plot")
tm_shape(bgmap) +
tm_rgb(bgmap, r = 1, g = 2, b = 3,
alpha = NA,
saturation = 1,
interpolate = TRUE,
max.value = 255) +
tm_shape(gps_path_selected) +
tm_lines()
View(car_assign)
**Route by Car ID 2 (assigned to Lars Azada)**
gps_path_selected <- gps_path %>%
filter(CarID == 2)
tmap_mode("plot")
tm_shape(bgmap) +
tm_rgb(bgmap, r = 1, g = 2, b = 3,
alpha = NA,
saturation = 1,
interpolate = TRUE,
max.value = 255) +
tm_shape(gps_path_selected) +
tm_lines()
gps_path_selected <- gps_path %>%
filter(CarID == 2)
tmap_mode("plot")
tm_shape(bgmap) +
tm_rgb(bgmap, r = 1, g = 2, b = 3,
alpha = NA,
saturation = 1,
interpolate = TRUE,
max.value = 255) +
tm_shape(gps_path_selected) +
tm_lines()
gps_path_selected <- gps_path %>%
filter(CarID == 3)
tmap_mode("plot")
tm_shape(bgmap) +
tm_rgb(bgmap, r = 1, g = 2, b = 3, alpha = NA, saturation = 1,
interpolate = TRUE, max.value = 255) +
tm_shape(gps_path_selected) +
tm_lines()
gps_path_selected <- gps_path %>%
filter(CarID == 1) # Replace the CarID
tmap_mode("view")
tm_shape(bgmap) +
tm_rgb(bgmap, r = 1, g = 2, b = 3,
alpha = NA,
saturation = 1,
interpolate = TRUE,
max.value = 255) +
tm_shape(gps_path_selected) +
tm_lines()
gps_path_selected <- gps_path %>%
filter(CarID == 2)
tmap_mode("view")
tm_shape(bgmap) +
tm_rgb(bgmap, r = 1, g = 2, b = 3, alpha = NA, saturation = 1,
interpolate = TRUE, max.value = 255) +
tm_shape(gps_path_selected) +
tm_lines()
gps_path_selected <- gps_path %>%
filter(CarID == 3)
tmap_mode("view")
tm_shape(bgmap) +
tm_rgb(bgmap, r = 1, g = 2, b = 3, alpha = NA, saturation = 1,
interpolate = TRUE, max.value = 255) +
tm_shape(gps_path_selected) +
tm_lines()
gps_path_selected <- gps_path %>%
filter(CarID == 4)
tmap_mode("view")
tm_shape(bgmap) +
tm_rgb(bgmap, r = 1, g = 2, b = 3, alpha = NA, saturation = 1,
interpolate = TRUE, max.value = 255) +
tm_shape(gps_path_selected) +
tm_lines()
gps_path_selected <- gps_path %>%
filter(CarID == 5)
tmap_mode("view")
tm_shape(bgmap) +
tm_rgb(bgmap, r = 1, g = 2, b = 3, alpha = NA, saturation = 1,
interpolate = TRUE, max.value = 255) +
tm_shape(gps_path_selected) +
tm_lines()
gps_path_selected <- gps_path %>%
filter(CarID == 6)
tmap_mode("view")
tm_shape(bgmap) +
tm_rgb(bgmap, r = 1, g = 2, b = 3, alpha = NA, saturation = 1,
interpolate = TRUE, max.value = 255) +
tm_shape(gps_path_selected) +
tm_lines()
gps_path_selected <- gps_path %>%
filter(CarID == 7)
tmap_mode("view")
tm_shape(bgmap) +
tm_rgb(bgmap, r = 1, g = 2, b = 3, alpha = NA, saturation = 1,
interpolate = TRUE, max.value = 255) +
tm_shape(gps_path_selected) +
tm_lines()
gps_path_selected <- gps_path %>%
filter(CarID == 8)
tmap_mode("view")
tm_shape(bgmap) +
tm_rgb(bgmap, r = 1, g = 2, b = 3, alpha = NA, saturation = 1,
interpolate = TRUE, max.value = 255) +
tm_shape(gps_path_selected) +
tm_lines()
gps_path_selected <- gps_path %>%
filter(CarID == 9)
tmap_mode("view")
tm_shape(bgmap) +
tm_rgb(bgmap, r = 1, g = 2, b = 3, alpha = NA, saturation = 1,
interpolate = TRUE, max.value = 255) +
tm_shape(gps_path_selected) +
tm_lines()
gps_path_selected <- gps_path %>%
filter(CarID == 10)
tmap_mode("view")
tm_shape(bgmap) +
tm_rgb(bgmap, r = 1, g = 2, b = 3, alpha = NA, saturation = 1,
interpolate = TRUE, max.value = 255) +
tm_shape(gps_path_selected) +
tm_lines()
gps_path_selected <- gps_path %>%
filter(CarID == 11)
tmap_mode("view")
tm_shape(bgmap) +
tm_rgb(bgmap, r = 1, g = 2, b = 3, alpha = NA, saturation = 1,
interpolate = TRUE, max.value = 255) +
tm_shape(gps_path_selected) +
tm_lines()
gps_path_selected <- gps_path %>%
filter(CarID == 12)
tmap_mode("view")
tm_shape(bgmap) +
tm_rgb(bgmap, r = 1, g = 2, b = 3, alpha = NA, saturation = 1,
interpolate = TRUE, max.value = 255) +
tm_shape(gps_path_selected) +
tm_lines()
gps_path_selected <- gps_path %>%
filter(CarID == 13)
tmap_mode("view")
tm_shape(bgmap) +
tm_rgb(bgmap, r = 1, g = 2, b = 3, alpha = NA, saturation = 1,
interpolate = TRUE, max.value = 255) +
tm_shape(gps_path_selected) +
tm_lines()
gps_path_selected <- gps_path %>%
filter(CarID == 14)
tmap_mode("view")
tm_shape(bgmap) +
tm_rgb(bgmap, r = 1, g = 2, b = 3, alpha = NA, saturation = 1,
interpolate = TRUE, max.value = 255) +
tm_shape(gps_path_selected) +
tm_lines()
gps_path_selected <- gps_path %>%
filter(CarID == 15)
tmap_mode("view")
tm_shape(bgmap) +
tm_rgb(bgmap, r = 1, g = 2, b = 3, alpha = NA, saturation = 1,
interpolate = TRUE, max.value = 255) +
tm_shape(gps_path_selected) +
tm_lines()
